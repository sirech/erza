version: '3'
services:

  nginx:
    container_name: nginx
    image: sirech/hardened-nginx:0.2

    env_file: .env

    environment:
      SHELF2_HOST: "shelf2.${HOST}"
      COOKERY2_HOST: "cookery2.${HOST}"
      ECHO_HOST: "echo.${HOST}"
      GRAFANA_HOST: "grafana.${HOST}"

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - "./templates:/etc/templates:ro"
      - "/srv/shelf2_public:/srv/shelf2_public:ro"
      - "/srv/cookery2_public:/srv/cookery2_public:ro"
      - "/cert:/cert:ro"
      - "/var/www/certbot:/var/www/certbot"

    networks:
      - backend
      - web

    depends_on:
      - shelf2-backend
      - cookery2-backend
      - echo
      - grafana

  db:
    container_name: db
    image: mysql:8.2

    env_file: .env

    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"

    networks:
      - backend

    volumes:
      - db:/var/lib/mysql

  shelf2-backend:
    container_name: shelf2
    image: quay.io/sirech/shelf2-backend

    env_file: .env

    environment:
      DB_HOST: db
      RAILS_LOG_TO_STDOUT: 1

    command: rails s -b 0.0.0.0

    networks:
      - web
      - backend

    depends_on:
      - db

  echo:
    container_name: echo
    image: quay.io/sirech/echo

    env_file: .env

    networks:
      - backend

  cookery2-backend:
    container_name: cookery2
    image: quay.io/sirech/cookery2-backend

    env_file: .env

    environment:
      ENV: prod
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "${DB_PASSWORD}"

    networks:
      - web
      - backend

    depends_on:
      - db

  prometheus:
    container_name: prometheus
    image: prom/prometheus

    volumes:
      - "./prometheus:/etc/prometheus"

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://localhost:9090'
      - '--web.enable-lifecycle'

    networks:
      - backend

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter

    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"

    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'

    networks:
      - backend

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.38.6

    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker:/var/lib/docker:ro"

    networks:
      - backend

  grafana:
    container_name: grafana
    image: grafana/grafana

    env_file: .env

    volumes:
      - "./prometheus/grafana/dashboards:/etc/grafana/provisioning/dashboards"
      - "./prometheus/grafana/datasources:/etc/grafana/provisioning/datasources"
      - "./prometheus/grafana/grafana.ini:/etc/grafana/grafana.ini"

    networks:
      - web
      - backend

networks:
  backend:
    internal: true
  web:

volumes:
  db:
