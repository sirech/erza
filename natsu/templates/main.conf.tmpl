{{ template "acme-challenge" .Env.HOST }}
# {{ template "acme-challenge" .Env.ALTERNATIVE_HOST }}

# server {
#     server_name {{ getenv "ALTERNATIVE_HOST" }} www.{{ getenv "ALTERNATIVE_HOST" }};
#     {{ template "ssl-listen" 443 }}

#     {{ template "acme-certificate" .Env.ALTERNATIVE_HOST }}
#     include /etc/nginx/includes/ssl-settings.conf;

#     return 301 https://{{ getenv "HOST" }}$request_uri;
# }

server {
    server_name {{ getenv "HOST" }} www.{{ getenv "HOST" }};
    {{ template "ssl-listen" 443 }}

    root /srv/main;

    {{ template "acme-certificate" .Env.HOST }}
    include /etc/nginx/includes/ssl-settings.conf;

    include /etc/nginx/includes/security-headers.conf;

    gzip_static on;

    location / {
        rewrite ^([^.\?]*[^/])$ $1/ permanent;
        try_files $uri $uri/ $uri/index.html /404.html =404;

        # add_header resets headers
        include /etc/nginx/includes/security-headers.conf;
        add_header Cache-Control "no-cache";
    }

    location ~* .(js|css|favicon.ico)$ {
        # add_header resets headers
        include /etc/nginx/includes/security-headers.conf;
        add_header Cache-Control public;
    }

    location ^~ /static/  {
        # add_header resets headers
        include /etc/nginx/includes/security-headers.conf;
        add_header Cache-Control public;
    }
}
